Learning to Schedule Straight-Line Code
 Abstract Execution speed of programs on modern computer architectures is sensitive, by a factor of two or more, to the order in which instructions are presented to the processor.  To realize potential execution efficiency, it is now customary for an optimizing compiler to employ a heuristic algorithm for instruction scheduling.  These algorithms are painstakingly hand-crafted, which is expenseive and time-consuming.  We show how to cast the instruction scheduling problem as a learning task, so that one obtains the heuristic scheduling algorithm automatically.  Our focus is the narrower problem of scheduling straight-line code,
