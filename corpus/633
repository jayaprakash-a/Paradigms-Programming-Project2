On Statistical Models in Automatic Tuning
 Abstract.  Achieving peak performance from library subroutines usually requires extensive, machine-dependent tuning by hand.  Automatic tuning systems have emerged in response, and they typically operate, at compile-time, by (1) generating a large number of possible implementations of a subroutine, and (2) selecting a fast implementation by an exhaustive, empirical search.  This paper applies statistical techniques to exploit the large amount of performance data collected during the search.  First, we develop a heuristic for stopping an exhaustive compiletime search early if a near-optimal implementation is found.  Second, we show how to construct run-time decision rules, based on run-time inputs, for selecting from among a subset of the best implementations.  We apply our methods to actual performance data collected by the PHiPAC tuning system for matrix multiply on a variety of hardware platforms.
