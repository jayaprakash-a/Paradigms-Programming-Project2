Planning graph as the basis for deriving heuristics for plan synthesis by state space and CSP search
 Abstract Most recent strides in scaling up planning have centered around two competing themes--disjunctive planners, exemplified by Graphplan, and heuristic state search planners, exemplified by UNPOP, HSP and HSP-r.  In this paper, we present a novel approach for successfully harnessing the advantages of the two competing paradigms to develop planners that are significantly more powerful than either of the approaches.  Specifically, we show that the polynomial-time planning graph structure that the Graphplan builds provides a rich substrate for deriving a family of highly effective heuristics for guiding state space search as well as CSP-style search.  The main leverage provided by the planning graph structure is a systematic and graded way to take subgoal interactions into account in designing state space heuristics.  For state space search, we develop several families of heuristics, some aimed at search speed and others at optimality of solutions, and analyze many approaches for improving the cost-quality tradeoffs offered by these heuristics.  Our normalized empirical comparisons show that our heuristics handily out-perform the existing state space heuristics.  For CSP-style search, we describe a novel way of using the planning graph structure to derive highly effective variable and value ordering heuristics.  We show that these heuristics can be used to improve Graphplan's own backward search significantly.  To demonstrate the effectiveness of our approach vis a vis the state-of-the-art in plan synthesis, we present AltAlt, a planner literally cobbled together from the implementations of Graphplan and state search style planners using our theory.  We evaluate AltAlt on the suite of problems used in the recent AIPS-2000 planning competition.  The results place AltAlt in the top tier of the competition planners--outperforming both Graphplan-based and heuristic search based planners.
