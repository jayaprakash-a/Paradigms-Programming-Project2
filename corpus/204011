Policy Gradient Methods for Reinforcement Learning with Function Approximation
 Abstract Function approximation is essential to reinforcement learning, but the standard approach of approximating a value function and determining a policy from it has so far proven theoretically intractable.  In this paper we explore an alternative approach in which the policy is explicitly represented by its own function approximator, independent of the value function, and is updated according to the gradient of expected reward with respect to the policy parameters.  Williams's REINFORCE method and actor--critic methods are examples of this approach.  Our main new result is to show that the gradient can be written in a form suitable for estimation from experience aided by an approximate action-value or advantage function.  Using this result, we prove for the first time that a version of policy iteration with arbitrary dierentiable function approximation is convergent to a locally optimal policy.  Large applications of reinforcement learning (RL) require the use of generalizing function approximators such neural networks, decision-trees, or instance-based methods.  The dominant approach for the last decade has been the value-function approach, in which all function approximation eort goes into estimating a value function, with the action-selection policy represented implicitly as the "greedy" policy with respect to the estimated values (e. g. , as the policy that selects in each state the action with highest estimated value).  The value-function approach has worked well in many applications, but has several limitations.  First, it is oriented toward finding deterministic policies, whereas the optimal policy is often stochastic, selecting dierent actions with specific probabilities (e. g. , see Singh, Jaakkola, and Jordan, 1994).  Second, an arbitrarily small change in the estimated value of an action can cause it to be, or not be, selected.  Such discontinuous changes have been identified as a key obstacle to establishing convergence assurances for algorithms following the value-function approach (Bertsekas and Tsitsiklis, 1996).  For example, Q-learning, Sarsa, and dynamic programming methods have all been shown unable to converge to any policy for simple MDPs and simple function approximators (
