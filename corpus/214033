On the optimality of solutions of the max-product belief-propagation algorithm in arbitrary graphs
 Problems involving probabilistic belief propagation arise in a wide variety of applications, including error correcting codes, speech recognition and image understanding.  Typically, a probability distribution is assumed over a set of variables and the task is to infer the values of the unobserved variables given the observed ones.  The assumed probability distribution is described using a graphical model [13] --- the qualitative aspects of the distribution are specified bya graph structure.  The graph may either be directed as in a Bayesian network [17], [11] or undirected as in a Markov Random Field [17], [9].  Here we focus on the problem of finding an assignment for the unobserved variables that is most probable given the observed ones.  In general, this problem is NP hard [18] but if the graph is singly connected (i. e.  there is only one path between anytwo given nodes) then there exist efficient local message{passing schemes to perform this task.  Pearl [17] derived suchascheme for singly connected Bayesian networks.  The algorithm, which he called \belief revision", is identical to his algorithm for finding posterior marginals over nodes except that the summation operator is replaced with a maximization.  Aji et al.  [2] have shown that both of Pearl's algorithms can be seen as special cases of generalized distributive laws over particular semirings.  In particular, Pearl's algorithm for finding maximum a posteriori (MAP) assignments can be seen as a generalized distributivelawover the max-product semiring.  We will henceforth refer to it as the \max-product" algorithm.  Pearl showed that for singly connected networks, the max-product algorithm is guaranteed to converge and that the assignment based on the messages at convergence is guaranteed to give the optimal assignment{values corresponding to the MAP solution.  Several groups have recently reported excellent experimental results by running the max-product algorithm on graphs with loops [22], [6], [3], [19], [6], [10].  Benedetto et al.  used the max-product algorithm to decode \turbo" codes and obtained excellent results that were slightly inferior to the original turbo decoding algorithm (which is equivalent to the sum-product algorithm).  Weiss [19] compared the performance of sum-product and max-product on a \toy" turbo code problem while distinguishing between converged and unconverged cases.  He found that if one considers only the convergent cases, the performance of max-product decoding is significantly better than sum-product decoding.  However, the max-product algorithm converges less often so its overall performance (including both convergent and nonconvergent cases) is inferior.  Progress in the analysis of the max-product algorithm has been made for two special topologies: single loop graphs, and \cycle codes".  For graphs with a single loop [22], [19], [20], [5], [2], it can be shown that the algorithm converges to a stable fixed point or a periodic oscillation.  If it converges to a stable fixed-point, then the assignment based on the fixed-point messages is the optimal assignment.  For graphs that correspond to cycle codes (low density paritycheck codes in which each bit is checked by exactly twocheck nodes), Wiberg [22] gave sufficient conditions for max-product to converge to the transmitted codeword and Horn [10] gave sufficient conditions for convergence to the MAP assignment.  In this paper we analyze the max-product algorithm in graphs of arbitrary topology.  We show that at a #xed-pointof the algorithm, the assignment is a \neighborhood maximum" of the posterior probability: the posterior probabilityof the max-product assignment is guaranteed to be greater than all other assignments in a particular large region around that assignment.  These results motivate using this powerful algorithm in a broader class of networks.
