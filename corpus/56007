Candidate Model Problems in Software Architecture
 we would like to open a discussion about suitable problems: what characteristics they should have, what specific problems would serve us well.  To start that discussion, we present ten candidate problems and sketches of several distinct architectural approaches to two of them.  We invite refinements and discussion of the problem list, the solution sets, and the criteria for choosing problems.  1 Introduction It is common for a discipline, especially one that is just getting its wits about itself, to adopt some shared, welldefined problems for teaching and study.  Often known as model systems or type problems, they provide a way to compare methods and results, work out new techniques on standard examples, and set a minimum standard of capability for new participants.  In time, a reasonable approach to some of these problems becomes the price of admission to get serious consideration of a new technique.  Model problems also provide a pre-debugged source of educational exercises.  Biology, for example, has n Drosophila melanogaster (the fruit fly) n Rattus rattus Norwegicus (the lab rat) n Escherichia coli (the digestive bacterium) Each of these is part of the common language of discourse in the field.  Each provides a familiar concrete instance that illustrates an important set of issues.  This allows discussions to start from shared knowledge of the basic example and proceed expeditiously to the result, theory, or technique of current interest.
