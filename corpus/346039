Making Latin Manuscripts Searchable using gHMMs
 Abstract We describe a method that can make a scanned, handwritten mediaeval latin manuscript accessible to full text search.  A generalized HMM is tted, using transcribed latin to obtain a transition model and one example each of 22 letters to obtain an emission model.  We show results for unigram, bigram and trigram models.  Our method transcribes 25 pages of a manuscript of Terence with fair accuracy (75% of letters correctly transcribed).  Search results are very strong; we use examples of variant spellings to demonstrate that the search respects the ink of the document.  Furthermore, our model produces fair searches on a document from which we obtained no training data.  1.  Intoduction There are many large corpora of handwritten scanned documents, and their number is growing rapidly.  Collections range from the complete works of Mark Twain to thousands of pages of zoological notes spanning two centuries.  Large scale analyses of such corpora is currently very difcult, because handwriting recognition works poorly.  Recently, Rath and Manmatha have demonstrated that one can use small bodies of aligned material as supervised data to train a word spotting mechanism [6].  The result can make scanned handwritten documents searchable.  Current techniques assume a closed vocabulary one can search only for words in the training set and search for instances of whole words.  This approach is particularly unattractive for an inected language, because individual words can take so many forms that one is unlikely to see all in the training set.  Furthermore, one would like the method used to require very little aligned training data, so that it is possible to process documents written by different scribes with little overhead.  Mediaeval Latin manuscripts are a natural rst corpus for studying this problem, because there are many scanned manuscripts and because the handwriting is relatively regular.  We expect the primary user need to be search over a large body of documents to allow comparisons between documents rather than transcription of a particular document (which is usually relatively easy to do by hand).  Desirable features for a system are: First, that it use little or no aligned training data (an ideal, which we believe may be attainable, is an unsupervised learning system).  Second, that one can search the document for an arbitrary string (rather than, say, only complete words that appear in the training data).  This would allow a user to determine whether a document contains curious or distinctive spellings, for example (gure 7).  We show that, using a statistical model based on a generalized HMM, we can search a medieval manuscript with considerable accuracy, using only one instance each of each letter in the manuscript to train the method (22 instances in total; Latin has no j, k, w, or z).  Furthermore, our method allows fairly accurate transcription of the manuscript.  We train our system on 22 glyphs taken from a a 12th century latin manuscript of Terences Comedies (obtained from a repository of over 80 scanned medieval works maintained by Oxford University [1]).  We show that our search is accurate using a considerable portion of this manuscript aligned by hand; we then show that fair search results are available on a different manuscript (MS.  Auct.  D.  2.  16, Latin Gospels with beast-headed evangelist portraits made at Landvennec, Brittany, late 9th or early 10th century, from [1]) without change of letter templates.  1. 1.  Previous Work Handwriting recognition is a traditional problem, too well studied to review in detail here (see [5]).  Typically, online handwriting recognition (where strokes can be recorded) works better than ofine handwriting recognition.  Handwritten digits can now be recognized with high accuracy [2, 4].  Handwritten amounts can be read with fair accuracy, which is signicantly improved if one segments the amount into digits at the same time as one recognizes it [3, 4].  Recently several authors have proposed new techniques for search and translation in this unrestricted setting.  Manmatha et al [6] introduce the technique of ^word spotting,~ which segments text into word images, recties the word images, and then uses an aligned training set to learn correspondences between rectied word images and strings.  The method is not suitable for a heavily inected language, because words take so many forms.  In an inected language, the natural unit to match to is a subset of a word, rather than a whole word, implying that one should segment the text into blocks which may be smaller than words while recognizing.  Vinciarelli et al [7] introduce a method for line by line recognition based around an HMM and quite similar to techniques used in the speech recognition community.  Their method uses a window that slides along the text to obtain features; this has the difculty that the same window is in some places too small (and so uninformative) and in others too big (and so spans more than one letter, and is confusing).  Their method requires a substantial body of aligned training data, which makes it impractical for our applications.  2.  The Model Our models for both search and transcription are based on the generalized HMM and differ only in their choice of transition model.  In an HMM, each hidden node c t emits a single evidence node x t .  In a generalized HMM, we allow each c t to emit a series of xs whose length is itself a random variable.  In our model, the hidden nodes correspond to letters and each x t is a single column of pixels.  Allowing letters to emit sets of columns lets us accomodate letter templates of variable width.  In particular, this means that we can unify segmenting ink into letters and recognizing blocks of ink; gure 3 shows an example of how useful this is.  2. 1.  Generating a line of text Our hidden state consists of a character label c, width w and vertical position y.  The statespace of c contains the characters `a-`z, a space ` , and a special end state #.  Let T c be the template associated with character c, T ch , T cw be respectively the height and width of that template, and m be the height of the image.
