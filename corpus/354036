On Approximating the Longest Path in a Graph
 Abstract We consider the problem of approximating the longest path in undirected graphs.  In an attempt to pin down the best achievable performance ratio of an approximation algorithm for this problem, we present both positive and negative results.  First, a simple greedy algorithm is shown to find long paths in dense graphs.  We then consider the problem of finding paths in graphs that are guaranteed to have extremely long paths.  We devise an algorithm that finds paths of a logarithmic length in Hamiltonian graphs.  This algorithm works for a much larger class of graphs (weakly Hamiltonian), where the result is the best possible.  Since the hard case appears to be that of sparse graphs, we also consider sparse random graphs.  Here we show that a relatively long path can be obtained, thereby partially answering an open problem of Broder, Frieze and Shamir.  To explain the difficulty of obtaining better approximations, we prove some strong hardness results.  We show that, for any ffl ! 1, the problem of finding a path of length n\Gamma n ffl in an n-vertex Hamiltonian graph is NP-hard.  We then show that no polynomial-time algorithm can find a constant factor approximation to the longest path problem unless P = NP.  We conjecture that the result can be strengthened to say that for some constant ffi ? 0, finding an approximation of ratio n ffi is also NP-hard.  As evidence towards this conjecture, we show that if any polynomial-time algorithm can approximate the longest path to a ratio of 2 O(log 1\Gamma ffl n) , for any ffl ? 0, then NP has a quasi-
