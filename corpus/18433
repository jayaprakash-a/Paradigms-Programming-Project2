Automated Synthesis of Computational Circuits Using Genetic Programming
 Computational circuits are of special practical importance when the small number of required mathematical functions does not warrant converting an analog signal into a digital signal, performing the mathematical function in the digital domain, and then converting the result back to the analog domain.  The design of computational circuits is difficult even for mundane mathematical functions and often relies on the clever exploitation of some aspect of the underlying device physics of the components.  Moreover, implementation of each different mathematical function typically requires an entirely different clever insight.  This paper demonstrates that computational circuits can be designed without such problem-specific insights using a single uniform approach involving genetic programming.  Both the circuit topology and the sizing of all circuit components are created by genetic programming.  This uniform approach to the automated synthesis of computational circuits is illustrated by evolving circuits that perform the cube root function (for which no circuit was found in the published literature) as well as for the square root, square, and cube functions.
