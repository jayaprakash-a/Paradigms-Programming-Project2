Adaptation in Constant Utility Non-Stationary Environments
 Abstract Environments that vary over time present a fundamental problem to adaptive systems.  Although in the worst case there is no hope of effective adaptation, some forms environmental variability do provide adaptive opportunities.  We consider a broad class of non-stationary environments, those which combine a variable result function with an invariant utility function, and demonstrate via simulation that an adaptive strategy employing both evolution and learning can tolerate a much higher rate of environmental variation than an evolution-only strategy.  We suggest that in many cases where stability has previously been assumed, the constant utility non-stationary environment may in fact be a more powerful viewpoint.  1 Non-stationary environments An adaptive system within an environment performs two basic tasks.  First, there is the search for, and the representation of, regularities in the history of interactions with the environment.  Second, there is the attempt to gain some advantage from the constructed representation, by basing future actions on the assumption that those regularities will persist.  If that fundamental adaptive assumption fails utterly, and the environment totally lacks such regularities, adaptation can provide no benefit.  Of course, not all non-stationary environments are so pathological.  Even if the environment, when viewed as a monolithic function, may be observed to change over time in unpredictable ways, it may be possible to view that environment as being formed from interacting components some of which do possess persistent regularities.  If that is possible, an adaptive system possessing such a view can gain advantage --- even though the environment will always have some surprises in store --- by finding, representing, and exploiting those component regularities.  1. 1 Constant utility In this paper we demonstrate one way this can occur within the context of evolutionary adaptation via the genetic algorithm [11, 8].  Consider this scenario in which an organism is faced with a series of interactions with an environment: In each interaction, the environment presents the organism with a situation, and then the organism responds with an action, and then the environment responds with a result.  A utility function, hidden from the organism, reduces the result to a scalar value.  The average utility of the results created by the organism over some given lifespan determines the organism's fitness.  The nasty trick is this: At unpredictable times and in unpredictable ways, the environmental mapping from situation and action to result changes.  As a consequence, if averaged over many environmental changes, the fitness produced by any single mapping will be at the chance level.  The adaptive challenge is to produce organisms that yield high online fitness (i. e. , fitness averaged over successive generations of organisms, see [6]), in the face of the changing environment.  Although this scenario is familiar enough to genetic algorithm researchers in some ways, it also has certain unusual aspects that are central to the present endeavor.  To begin with, the environment is non-stationary: The fitness of a given situation-action map changes over time.  Also, the fitness function can readily be decomposed into two sub-functions: One function mapping from situation and action to result, and another function mapping from result to utility.  And finally, although the result function varies over time, the utility function does not change.  We call environments that possess these properties constant utility nonstationary environments.  Although adaptation may not be beneficial in worst-case non-stationary environments, we can exploit the persistent regularity of the utility function to build an effective adaptation algorithm for
