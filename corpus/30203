Service Sockets: A Uniform User-Level Interface for Networking Applications
 Abstract As network services have evolved, their communication structures have become increasingly complex.  This has led to a corresponding increase in complexity of applications that interact with these services.  In this paper, we propose the Service Socket abstraction to help alleviate this complexity.  Conceptually, a Service Socket represents a communication channel to a service instead of a particular host.  The goal of Service Sockets is to allow application programmers to interact with diverse complex services using the familiar Berkeley Sockets programming interface.  The Service Sockets framework provides service-independent functionality in a small core library and encapsulates service-dependent functionality in dynamically linked libraries with a welldefined interface.  It provides a simple speci#cation interface that can be used by application programmers to describe the desired configuration of a Service Socket.  We present several examples of how Service Sockets can be used to provide a common interface for complex end-point functionality.  A microbenchmark-based evaluation indicates that such an extensible user-level framework does not necessarily incur a substantial performance penalty.
