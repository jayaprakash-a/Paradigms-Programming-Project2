Temporal-Difference Networks with History
 Abstract Temporal-difference (TD) networks are a formalism for expressing and learning grounded world knowledge in a predictive form [Sutton and Tanner, 2005] .  However, not all partially observable Markov decision processes can be efficiently learned with TD networks.  In this paper, we extend TD networks by allowing the network-update process (answer network) to depend on the recent history of previous actions and observations rather than only on the most recent action and observation.  We show that this extension enables the solution of a larger class of problems than can be solved by the original TD networks or by historybased methods alone.  In addition, we apply TD networks to a problem that, while still simple, is significantly larger than has previously been considered.  We show that history-extended TD networks can learn much of the common-sense knowledge of an egocentric gridworld domain with a single bit of perception.  Temporal-difference (TD) networks are a formalism for expressing and learning grounded knowledge about dynamical systems [Sutton and Tanner, 2005] .  TD networks represent the state of the dynamical system as a vector of predictions about future action--observation sequences.  Each prediction is an estimate of the probability or expected value of some future event.  For example, a prediction might estimate the probability of seeing a particular observation at the next time step.  The predictions generated at each time step are thought of as "answers" to a set of "questions" asked by the TD network.  Representations that encode the state of a dynamical system as a vector of predictions are known as predictive representations [Littman et al. , 2002; Jaeger, 1998; Rosencrantz et al. , 2004] .  Predictive representations are a relatively new area of research; as a community we are answering fundamental questions about their possibilities and limitations.  So far, the results have been encouraging.  Singh et al.  have shown that one particular representation known as linear predictive state representations (or linear PSRs) can represent any n th -order Markov model or partially observable Markov decision process (POMDP) [Singh et al. , 2004; Littman et al. , 2002] .  Further, they showed that the size of the PSR scales at least as well as the existing approaches; a linear PSR model is at least as compact as the equivalent POMDP or n th -order Markov model.  TD networks are a generalization of linear PSRs and therefore inherit their representational power [Singh, 2004] .  TD networks have been applied successfully to simple environments, both fully and partially observable.  Although TD networks have the expressive power to accurately model complex partially-observable environments, we show that the existing learning algorithm is insufficient for learning some of these models.  In this paper, we explore the classes of environment whose model could not previously be learned and we improve TD networks so that they can learn models of these environments.  In Section 1 we review the TD networks specification.  In Sections 2 and 3 we examine the class of problems that we have been unable to learn with the existing specification of TD networks, augment the specification, and present new results.  We present the results of applying these augmented TD networks to a more complex grid-world domain in Section 5.  Finally we conclude and discuss the direction of our future research in Section 6.  1 TD Networks without History In the following text we describe a specific instantiation of the original TD networks specification that is instructive for understanding the details of our work.  For information on the general specification of TD networks we direct the reader to the original work [Sutton and Tanner, 2005] .  The problem addressed by TD networks is a general one of learning to predict aspects of the interaction between a decision making agent and its environment (a dynamical system).  At each of a series of discrete time steps t, and agent takes an action a t 2 A and the environment responds by generating an observation o t 2 O.  In this work, we will consider TD networks with two observations, 0 and 1.  The action and observation events occur in sequence, a t- 1 , o t , a t , o t+1 , a t+1 , o t+2 .  This sequence will be called experience.  We are interested in predicting not just each next observation, but more general, action-conditional functions of future experience.  The focus of this work current is on partially observable environments---environments where the observation o t is not a sufficient statistic to make optimal predictions about future experience (o t does not uniquely identify the state of the environment).  We will be using TD networks to learn a model of the environment that is accurate and can be maintained over time.  A TD network is a network of nodes, each representing a single scalar prediction.  The nodes are interconnected by links representing target relationships between predictions, observations, and actions.  These nodes and links determine a set of questions being asked about the data and predictions, and accordingly are called the question network.  Each node on the TD network is a function approximator that outputs a prediction using inputs such as the current observation, the previous action, and the predictions made at the previous time step.  This computation part of the TD network is thought of as providing the answers to the questions, and accordingly is called the answer network.  Figure 1 shows a typical question network.  The question of node y 0 at time t is `If the next action is a1, what is the probability that the next observation o t+1 will be 1?'.  Similarly, node y 2 asks `If the next action is a1, what will node y 0 predict at time t + 1?'.  This is a desired relationship between predictions, but also a question about the data.  We can unroll this interpredictive (or TD) relationship to look at the extensive relationship between y 2 and the data, which yields the question `If the next two actions are a1, what is the probability that o t+2 will be 1?'.  In a fully observable (Markov) environment, it is natural for the question network to be a set of questions that are in some way interesting to the experimenter.  In partiallyobservable environments the structure of the question network has additional constraints; the answers should be a sufficient statistic that accurately represents the state and can be updated as new data becomes available.  Although the question of how to discover a question network that expresses a minimal sufficient statistic is important, it is tangental to the focus of this work.  The question networks we use are not minimal, and a network like that in Figure 1 likely contains O t+1 y 1 a2 y 0 a1 y 2 a1 y 3 a2 y 6 a1 y 7 a2 y 8 a1 y 9 a2 y 4 y 5 a1 a2 a1 a2 Figure 1: Symmetric action-conditional question network.  The network forms a symmetric tree, with a branching factor of 
