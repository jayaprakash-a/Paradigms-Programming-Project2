Reinforcement Learning for Dynamic Channel Allocation in Cellular Telephone Systems
 Abstract In cellular telephone systems, an important problem is to dynamically allocate the communication resource (channels) so as to maximize service in a stochastic caller environment.  This problem is naturally formulated as a dynamic programming problem and we use a reinforcement learning (RL) method to find dynamic channel allocation policies that are better than previous heuristic solutions.  The policies obtained perform well for a broad variety of call traffic patterns.  We present results on a large cellular system with approximately 49 49 states.  In cellular communication systems, an important problem is to allocate the communication resource (bandwidth) so as to maximize the service provided to a set of mobile callers whose demand for service changes stochastically.  A given geographical area is divided into mutually disjoint cells, and each cell serves the calls that are within its boundaries (see Figure 1a).  The total system bandwidth is divided into channels, with each channel centered around a frequency.  Each channel can be used simultaneously at different cells, provided these cells are sufficiently separated spatially, so that there is no interference between them.  The minimum separation distance between simultaneous reuse of the same channel is called the channel reuse constraint .  When a call requests service in a given cell either a free channel (one that does not violate the channel reuse constraint) may be assigned to the call, or else the call is blocked from the system; this will happen if no free channel can be found.  Also, when a mobile caller crosses from one cell to another, the call is "handed off" to the cell of entry; that is, a new free channel is provided to the call at the new cell.  If no such channel is available, the call must be dropped/disconnected from the system.  One objective of a channel allocation policy is to allocate the available channels to calls so that the number of blocked calls is minimized.  An additional objective is to minimize the number of calls that are dropped when they are handed off to a busy cell.  These two objectives must be weighted appropriately to reflect their relative importance, since dropping existing calls is generally more undesirable than blocking new calls.  To illustrate the qualitative nature of the channel assignment decisions, suppose that there are only two channels and three cells arranged in a line.  Assume a channel reuse constraint of 2, i. e. , a channel may be used simultaneously in cells 1 and 3, but may not be used in channel 2 if it is already used in cell 1 or in cell 3.  Suppose that the system is serving one call in cell 1 and another call in cell 3.  Then serving both calls on the same channel results in a better channel usage pattern than serving them on different channels, since in the former case the other channel is free to be used in cell 2.  The purpose of the channel assignment and channel rearrangement strategy is, roughly speaking, to create such favorable usage patterns that minimize the likelihood of calls being blocked.  We formulate the channel assignment problem as a dynamic programming problem, which, however, is too complex to be solved exactly.  We introduce approximations based on the methodology of reinforcement learning (RL) (e. g. , Barto, Bradtke and Singh, 1995, or the recent textbook by Bertsekas and Tsitsiklis, 1996).  Our method learns channel allocation policies that outperform not only the most commonly used policy in cellular systems, but also the best heuristic policy we could find in the literature.  1 CHANNEL ASSIGNMENT POLICIES Many cellular systems are based on a fixed assignment (FA) channel allocation; that is, the set of channels is partitioned, and the partitions are permanently assigned to cells so that all cells can use all the channels assigned to them simultaneously without interference (see Figure 1a).  When a call arrives in a cell, if any preassigned channel is unused; it is assigned, else the call is blocked.  No rearrangement is done when a call terminates.  Such a policy is static and cannot take advantage of temporary stochastic variations in demand for service.  More efficient are dynamic channel allocation policies, which assign channels to different cells, so that every channel is available to every cell on a need basis, unless the channel is used in a nearby cell and the reuse constraint is violated.  The best existing dynamic channel allocation policy we found in the literature is Borrowing with Directional Channel Locking (BDCL) of Zhang & Yum (1989).  It numbers the channels from 1 to N , partitions and assigns them to cells as in FA.  The channels assigned to a cell are its nominal channels.  If a nominal channel is available when a call arrives in a cell, the smallest numbered such channel is assigned to the call.  If no nominal channel is available, then the largest numbered free channel is borrowed from the neighbour with the most free channels.  When a channel is borrowed, careful accounting of the directional effect of which cells can no longer use that channel because of interference is done.  The call is blocked if there are no free channels at all.  When a call terminates in a cell and the channel so freed is a nominal channel, say numbered i, of that cell, then if there is a call in that cell on a borrowed channel, the call on the smallest numbered borrowed channel is reassigned to i and the borrowed channel is returned to the appropriate cell.  If there is no call on a borrowed channel, then if there is a call on a nominal channel numbered larger than i, the call on the highest numbered nominal channel is reassigned to i.  If the call just terminated was itself on a borrowed channel, the
