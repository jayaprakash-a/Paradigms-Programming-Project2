A Dynamic Data Structure for Checking Hyperacyclicity
 Abstract We present a dynamic data structure that keeps track of an acyclic hypergraph (equivalently, a triangulated graph) and enables verifying that adding a candidate hyperedge (clique) will not break the acyclicity of the augmented hypergraph.  This is a generalization of the use of Tarjan's Union-Find data structure for maintaining acyclicity when augmenting forests, and the amortized time per operation has a similar almost-constant dependence on the size of the hypergraph.  Such a data structure is useful when augmenting acyclic hypergraphs, e. g.  ~ in order to greedily construct a high-weight acyclic hypergraph.  In designing this data structure, we introduce a hierarchical decomposition of acyclic hypergraphs that aid in understanding hyper-connectivity, and introduce a novel concept of a hypercycle which is excluded from acyclic hypergraphs.
