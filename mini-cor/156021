General Indexation of Weighted Automata -Application to Spoken Utterance Retrieval
 Abstract Much of the massive quantities of digitized data widely available, e. g. , text, speech, handwritten sequences, are either given directly, or, as a result of some prior processing, as weighted automata.  These are compact representations of a large number of alternative sequences and their weights reflecting the uncertainty or variability of the data.  Thus, the indexation of such data requires indexing weighted automata.  We present a general algorithm for the indexation of weighted automata.  The resulting index is represented by a deterministic weighted transducer that is optimal for search: the search for an input string takes time linear in the sum of the size of that string and the number of indices of the weighted automata where it appears.  We also introduce a general framework based on weighted transducers that generalizes this indexation to enable the search for more complex patterns including syntactic information or for different types of sequences, e. g. , word sequences instead of phonemic sequences.  The use of this framework is illustrated with several examples.  We applied our general indexation algorithm and framework to the problem of indexation of speech utterances and report the results of our experiments in several tasks demonstrating that our techniques yield comparable results to previous methods, while providing greater generality, including the possibility of searching for arbitrary patterns represented by weighted automata.  1 Motivation Much of the massive quantities of digitized data widely available is highly variable or uncertain.  This uncertainty affects the interpretation of the data and its computational processing at various levels, e. g. , natural language texts are abundantly ambiguous, speech and hand-written sequences are highly variable and hard to recognize in presence of noise, biological sequences may be altered or incomplete.  Searching or indexing such data requires dealing with a large number of ranked or weighted alternatives.  These may be for example the different parses of an input text, the various responses to a search engine or information extraction query, or the best hypotheses of a speech or hand-written recognition system.  In most cases, alternative sequences can be compactly represented by weighted automata.  The weights may be probabilities or some other weights used to rank different hypotheses.  This motivates our study of the general problem of indexation of weighted automata.  This is more general than the classical indexation problems since, typically, there are many distinct hypotheses or alternatives associated with the same index, e. g. , a specific input speech or hand-written sequence may have a large number of different transcriptions according to the system and models used.  Moreover, the problem requires taking into consideration the weight of each alternative, which does not have a counterpart in classical indexation problems.  We describe a general indexation algorithm for weighted automata.  The resulting index is represented by a deterministic weighted transducer that is optimal for search: the search for an input string takes time linear in the sum of the size of that string and the number of indices of the weighted automata where it appears.  In some cases, one may wish to search using sequences in some level, e. g.  word sequences, different from the level of the sequences of the index, e. g.  phonemic sequences.  One may also wish to search for complex sequences including both words and parts-of-speech, or restrict the search by either restricting the weights or probabilities or the lengths or types of sequences.  We describe a general indexation framework covering all these cases.  Our framework is based on the use of filtering weighted transducers for restriction or other transducers mapping between distinct information levels or knowledge structures.  We illustrate the use of this framework with several examples that demonstrate its relevance to a number of indexation tasks.  We applied our framework and algorithms to the particular problem of speech indexation.  In recent years, spoken document retrieval systems have made large archives of broadcast news searchable and browsable.  Most of these systems use automatic speech recognition to convert speech into text, which is then indexed using standard methods.  When a user presents the system with a query, documents that are relevant to the query are found using text-based information retrieval techniques.  As speech indexation and retrieval systems move beyond the domain of broadcast news to more challenging spoken communications, the importance for the indexed material to contain more than just a simple text representation of the communication is becoming clear.  Indexation and retrieval techniques must be extended to handle more general representations including for example syntactic information.  In addition to the now familiar retrieval systems or search engines, other applications such as data mining systems can be used to automatically identify useful patterns in large collections of spoken communications.  Information extraction systems can be used to gather high-level information such as named-entities.  For a given input speech utterance, a large-vocabulary speech recognition system often generates a lattice, a weighted automaton representing a range of alternative hypotheses with some associated weights or probabilities used to rank them.  When the accuracy of a system is relatively low as in many conversational speech recognition tasks, it is not safe to rely only on the best hypothesis output by the system.  It is then preferable to use instead the full lattice output by the recognizer.  We report the results of our experiments in several tasks demonstrating that our techniques yield comparable results to the previous methods of Saraclar and Sproat (2004), while providing greater generality, including the possibility of searching for arbitrary patterns represented by weighted automata.  The paper is organized as follows.  Section 2 introduces the notation and the definitions used in the rest of the paper.  Section 3 describes our general indexation algorithm for weighted automata.  The algorithm for searching that index is presented in Section 4 and our general indexation framework is described and illustrated in Section 5.  Section 6 reports the results of our experiments in several tasks.
