A Nonparametric Approach to Noisy and Costly Optimization
 Abstract This paper describes Pairwise Bisection: a nonparametric approach to optimizing a noisy function with few function evaluations.  The algorithm uses nonparametric reasoning about simple geometric relationships to find minima efficiently.  Two factors often frustrate optimization: noise and cost.  Output can contain significant quantities of noise or error, while time or money allows for only a handful of experiments.  Pairwise bisection is used here to attempt to automate the process of robust and efficient experiment design.  Real world functions also tend to violate traditional assumptions of continuousness and Gaussian noise.  Since nonparametric statistics do not depend on these assumptions, this algorithm can optimize a wide variety of phenomena with fewer restrictions placed on noise.  The algorithm's performance is compared to that of three competing algorithms, Amoeba, PMAX, and Q2 on several different test functions.  Results on these functions indicate competitive performance and superior resistance to noise.  1.  Problem The problem of optimizing a function f : ! n ! ! will be discussed here as finding a local minimum for the function, i. e.  a point x \Lambda such that there exists a neighborhood B of x \Lambda with f(x \Lambda ) f(x) 8x 2 B: (1) In the noisy case, the observed output y is a combination of the underlying function f and some amount of error or noise.  Assuming noise has a mean of zero, y(x) = f(x) + noise (2) For example, during the optimization of a chemical process, if the underlying function f(x) is the yield of a chemical reaction using parameters x (say, temperature and pH,) then the noisy output y(x) might represent the observed yield.  The task of the optimizer is to find x \Lambda , the combination of temperature and pH with the greatest expected yield.  Many algorithms exist to perform this task, especially in the numerical analysis literature (Press et al. , 1992), but they typically require many iterations of the experimental cycle.  When experiments are costly or time-consuming, these algorithms are inappropriate.
