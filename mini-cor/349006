WebWatcher: A Learning Apprentice for the World Wide Web
 Abstract We describe an information seeking assistant for the World Wide Web.  This agent, called WebWatcher, interactively helps users locate desired information by employing learned knowledge about which hyperlinks are likely to lead to the target information.  Our primary focus to date has been on two issues: (1) organizing WebWatcher to provide interactive advice to Mosaic users while logging their successful and unsuccessful searches as training data, and (2) incorporating machine learning methods to automatically acquire knowledge for selecting an appropriate hyperlink given the current web page viewed by the user and the user's information goal.  We describe the initial design of WebWatcher, and the results of our preliminary learning experiments.  1 Overview Many have noted the need for software to assist people in locating information on the world wide web.  This paper 1 presents the initial design and implementation of an agent called WebWatcher that is intended to assist users both by interactively advising them as they traverse web links in search of information, and by searching autonomously on their behalf.  In interactive mode, WebWatcher acts as a learning apprentice [Mitchell et al. , 1985, Mitchell et.  al. , 1994], providing interactive advice to the Mosaic user regarding which hyperlinks to follow next, then learning by observing the user's reaction to this advice as well as the eventual success or failure of the user's actions.  The initial implementation of WebWatcher provides only this interactive mode, and it does not yet possess sufficient knowledge to give widely useful search advice.  In this paper we present WebWatcher as a case study in the design of web-based learning agents for information retrieval.  We focus in particular on the interface that enables WebWatcher to observe and advise any consenting user browsing any location on the web, and on results of initial experiments with its learning methods.  1 This paper originally appeared in the 1995 AAAI Spring Symposium on Information Gathering from Heterogeneous, Distributed Environments.  March, 1995.  2 WebWatcher This section presents the design of WebWatcher through a scenario of its use.  WebWatcher is an information search agent that is "invoked" by following a web hyperlink to its web page, then filling out a Mosaic form to indicate what information is sought (e. g. , a publication by some author).  WebWatcher then returns the user to (a copy of) the web page from which he or she came, and assists the user as they follow hyperlinks forward through the web in search of the target information.  As the user traverses the web, WebWatcher uses its learned knowledge to recommend especially promising hyperlinks to the user by highlighting these links on the user's display.  At any point, the user may dismiss WebWatcher, by clicking one of two indicators on the WebWatcher icon, indicating either that the search has succeeded, or that the user wishes to give up on this search.  The sequence of web pages visited by the user in a typical scenario is illustrated in figures 1 through 5.  The first screen shows a typical web page, 2 providing information about Machine Learning.  Notice in the third paragraph, this page invites the user to try out WebWatcher.  If the user clicks on this link, he or she arrives at the front door WebWatcher page (Figure 2), which allows the user to identify the type of information he seeks.  In this scenario the user indicates that the goal is to locate a paper, so he is shown a new screen (Figure 3) with a form to elaborate this information request.  Once completed, the user is returned to the original page (Figure 4), with WebWatcher now "looking over his shoulder".  Notice the WebWatcher icon at the top of the screen, and the highlighted link (bracketed by the WebWatcher eyes icon) halfway down the screen.  This highlighted link indicates WebWatcher's advice that the user follow the link to the University of Illinois / Urbana (UIUC) AI / ML Page.  The user decides to select this recommended link, and arrives at the new web page shown in Figure 5, which contains new advice from WebWatcher.  The search continues in this way, with the user directing the search and WebWatcher highlighting recommended links, until the user dismisses WebWatcher by clicking on "I found it" or "I give up".  From the user's perspective WebWatcher is an agent with specialized knowledge about how to search outward from the page on which it was invoked.  While WebWatcher suggests which hyperlink the user should take, the user remains firmly in control, and may ignore the system's advice at any step.  We feel it is important for the user to remain in control, because WebWatcher's knowledge may provide imperfect advice, and because WebWatcher might not perfectly understand the user's information seeking goal.  From WebWatcher's perspective, the above scenario looks somewhat different.  When first invoked it accepts an argument, encoded in the URL that accesses it, which contains the user's "return address. " The return address is the URL of the web page from which the user came.  Once the user fills out the form specifying his or her information seeking goal, WebWatcher sends the user back to a copy of this original page, after making three changes.  First, the WebWatcher banner is added to the top of the page.  Second, each hyperlink URL in the original page is replaced by a new URL that points back to the WebWatcher.  Third, if the WebWatcher finds that any of the hyperlinks on this page are strongly recommended by its search control knowledge, then it highlights the most promising links in order to suggest them to the user.  It sends this modified copy of the return page to the user, and opens a file to begin logging this user's information search as training data.  While it waits for the user's next step, it prefetches any web pages it has just recommended to the user, and begins to process these pages to determine their most promising outgoing hyperlink.  When the user clicks on the next hyperlink, WebWatcher updates the log for this search, 2 This is a copy of the web page http:
