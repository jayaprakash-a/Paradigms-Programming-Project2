AltAlt: Combining the Advantages of Graphplan and Heuristic State Search| Abstract Most recent strides in scaling up planning have centered around two competing themes--disjunctive planners, exemplified by Graphplan, and heuristic state search planners, exemplified by HSP and HSP-R.  In this paper, we describe a planner called AltAlt, which successfully combines the advantages of the two competing paradigms to develop a planner that is significantly more powerful than either of the approaches. 
Nonparametric Decentralized Detection using Kernel Methods| Abstract We consider the problem of decentralized detection under constraints on the number of bits that can be transmitted by each sensor.  In contrast to most previous work, in which the joint distribution of sensor observations is assumed to be known, we address the problem when only a set of empirical samples is available.  We propose a novel algorithm using the framework of empirical risk minimization and marginalized kernels, and analyze its computational and statistical properties both theoretically and empirically.  We provide an efficient implementation of the algorithm, and demonstrate its performance on both simulated and real data sets. 
Extracting Effective and Admissible State Space Heuristics from the Planning Graph| Abstract Graphplan and heuristic state space planners such as HSP-R and UNPOP are currently two of the most effective approaches for solving classical planning problems.  These approaches have hither-to been seen as largely orthogonal.  In this paper, we show that the planning graph structure that Graphplan builds in polynomial time, provides a rich substrate for deriving more effective heuristics for state space planners.  Specifically, we show that the heuristics used by planners such as HSP-R and UNPOP do badly in several domains due to their failure to consider the interactions between subgoals, and that the mutex information in the planning graph captures exactly this interaction information.  We develop several families of heuristics, some aimed at search speed and others at optimality of solutions.  Our empirical studies show that our heuristics significantly out-perform the existing state space heuristics. 
A kernel-based learning approach to ad hoc sensor network localization| Abstract We show that the coarse-grained and fine-grained localization problems for ad hoc sensor networks can be posed and solved as a pattern recognition problem using kernel methods from statistical learning theory.  This stems from an observation that the kernel function, which is a similarity measure critical to the eectiveness of a kernel-based learning algorithm, can be naturally defined in terms of the signal strength received by the sensors.  Thus we work in the natural coordinate system provided by the physical devices.  This not only allows us to sidestep the dicult ranging procedure required by many existing localization algorithms in the literature, but also enables us to derive a simple and eective localization algorithm.  The algorithm is particularly suitable for networks with densely distributed sensors, most of whose locations are unknown.  The computations are initially performed at the base sensors and the computation cost depends only on the number of base sensors.  The localization step for each sensor of unknown location is then performed locally in linear time.  We present an analysis of the localization error bounds, and provide an evaluation of our algorithm on both simulated and real sensor networks.  1
Localization algorithms for sensor networks using RF signal strength CS 252 Class Project| Abstract We propose and investigate: (1) models for RF signal strength and (2) localization algorithms for ad-hoc sensor networks. 
Reviving Partial Order Planning| Abstract This paper challenges the prevailing pessimism about the scalability of partial order planning (POP) algorithms by presenting several novel heuristic control techniques that make them competitive with the state of the art plan synthesis algorithms.  Our key insight is that the techniques responsible for the efficiency of the currently successful planners--viz. , distance based heuristics, reachability analysis and disjunctive constraint handling--can also be adapted to dramatically improve the efficiency of the POP algorithm.  We implement our ideas in a variant of UCPOP called REPOP 1 .  Our empirical results show that in addition to dominating UCPOP, REPOP also convincingly outperforms Graphplan in several "parallel" domains.  The plans generated by REPOP also tend to be better than those generated by Graphplan and state search planners in terms of execution flexibility. 
Divergences, surrogate loss functions and experimental design| Abstract In this paper, we provide a general theorem that establishes a correspondence between surrogate loss functions in classification and the family of f-divergences.  Moreover, we provide constructive procedures for determining the f-divergence induced by a given surrogate loss, and conversely for finding all surrogate loss functions that realize a given f-divergence.  Next we introduce the notion of universal equivalence among loss functions and corresponding f-divergences, and provide necessary and sufficient conditions for universal equivalence to hold.  These ideas have applications to classification problems that also involve a component of experiment design; in particular, we leverage our results to prove consistency of a procedure for learning a classifier under decentralization requirements. 
Planning graph as the basis for deriving heuristics for plan synthesis by state space and CSP search| Abstract Most recent strides in scaling up planning have centered around two competing themes--disjunctive planners, exemplified by Graphplan, and heuristic state search planners, exemplified by UNPOP, HSP and HSP-r.  In this paper, we present a novel approach for successfully harnessing the advantages of the two competing paradigms to develop planners that are significantly more powerful than either of the approaches.  Specifically, we show that the polynomial-time planning graph structure that the Graphplan builds provides a rich substrate for deriving a family of highly effective heuristics for guiding state space search as well as CSP-style search.  The main leverage provided by the planning graph structure is a systematic and graded way to take subgoal interactions into account in designing state space heuristics.  For state space search, we develop several families of heuristics, some aimed at search speed and others at optimality of solutions, and analyze many approaches for improving the cost-quality tradeoffs offered by these heuristics.  Our normalized empirical comparisons show that our heuristics handily out-perform the existing state space heuristics.  For CSP-style search, we describe a novel way of using the planning graph structure to derive highly effective variable and value ordering heuristics.  We show that these heuristics can be used to improve Graphplan's own backward search significantly.  To demonstrate the effectiveness of our approach vis a vis the state-of-the-art in plan synthesis, we present AltAlt, a planner literally cobbled together from the implementations of Graphplan and state search style planners using our theory.  We evaluate AltAlt on the suite of problems used in the recent AIPS-2000 planning competition.  The results place AltAlt in the top tier of the competition planners--outperforming both Graphplan-based and heuristic search based planners. 
